---
- name: Install Prometheus
  hosts: prometheus_node
  become: true
  tasks:
    - name: Create prometheus system group
      ansible.builtin.group:
        name: prometheus
        system: true
        state: present

    - name: Create prometheus system user
      ansible.builtin.user:
        name: prometheus
        system: true
        shell: "/usr/sbin/nologin"
        group: prometheus
        createhome: false
        home: "{{ prometheus_db_dir }}"

    - name: Create prometheus data directory
      ansible.builtin.file:
        path: "{{ prometheus_db_dir }}"
        state: directory
        owner: prometheus
        group: prometheus
        mode: 0755

    - name: create prometheus configuration directories
      ansible.builtin.file:
        path: "{{ item }}"
        state: directory
        owner: root
        group: prometheus
        mode: 0770
      with_items:
        - "{{ prometheus_config_dir }}"
        - "{{ prometheus_config_dir }}/rules"
        - "{{ prometheus_config_dir }}/file_sd"

    - block:
        - name: "Get checksum list"
          set_fact:
            __prometheus_checksums: "{{ lookup('url', 'https://github.com/prometheus/prometheus/releases/download/v' + prometheus_version + '/sha256sums.txt', wantlist=True) | list }}"
          run_once: true

        - name: "Get checksum for {{ go_arch }} architecture"
          set_fact:
            __prometheus_checksum: "{{ item.split(' ')[0] }}"
          with_items: "{{ __prometheus_checksums }}"
          when:
            - "('linux-' + go_arch + '.tar.gz') in item"
      delegate_to: localhost
      when:
        - prometheus_binary_local_dir | length == 0
        - not prometheus_skip_install

    - name: Get systemd version
      command: systemctl --version
      changed_when: false
      check_mode: false
      register: __systemd_version

    - name: Set systemd version fact
      set_fact:
        prometheus_systemd_version: "{{ __systemd_version.stdout_lines[0].split(' ')[-1] }}"

    - block:
        - name: download prometheus binary to local folder
          become: false
          get_url:
            url: "https://github.com/prometheus/prometheus/releases/download/v{{ prometheus_version }}/prometheus-{{ prometheus_version }}.linux-{{ go_arch }}.tar.gz"
            dest: "/tmp/prometheus-{{ prometheus_version }}.linux-{{ go_arch }}.tar.gz"
            checksum: "sha256:{{ __prometheus_checksum }}"
          register: _download_archive
          until: _download_archive is succeeded
          retries: 5
          delay: 2
          # run_once: true # <-- this cannot be set due to multi-arch support
          delegate_to: localhost
          check_mode: false

        - name: unpack prometheus binaries
          become: false
          unarchive:
            src: "/tmp/prometheus-{{ prometheus_version }}.linux-{{ go_arch }}.tar.gz"
            dest: "/tmp"
            creates: "/tmp/prometheus-{{ prometheus_version }}.linux-{{ go_arch }}/prometheus"
          delegate_to: localhost
          check_mode: false

        - name: propagate official prometheus and promtool binaries
          copy:
            src: "/tmp/prometheus-{{ prometheus_version }}.linux-{{ go_arch }}/{{ item }}"
            dest: "{{ _prometheus_binary_install_dir }}/{{ item }}"
            mode: 0755
            owner: root
            group: root
          with_items:
            - prometheus
            - promtool
          notify:
            - restart prometheus

        - name: propagate official console templates
          copy:
            src: "/tmp/prometheus-{{ prometheus_version }}.linux-{{ go_arch }}/{{ item }}/"
            dest: "{{ prometheus_config_dir }}/{{ item }}/"
            mode: 0644
            owner: root
            group: root
          with_items:
            - console_libraries
            - consoles
          notify:
            - restart prometheus
      when:
        - prometheus_binary_local_dir | length == 0
        - not prometheus_skip_install

    - name: create systemd service unit
      template:
        src: ./templates/prometheus/prometheus.service.j2
        dest: /etc/systemd/system/prometheus.service
        owner: root
        group: root
        mode: 0644
      notify:
        - restart prometheus

    - name: alerting rules file
      template:
        src: "./templates/prometheus/alert.rules.j2"
        dest: "{{ prometheus_config_dir }}/rules/ansible_managed.rules"
        owner: root
        group: prometheus
        mode: 0640
        validate: "{{ _prometheus_binary_install_dir }}/promtool check rules %s"
      when:
        - prometheus_alert_rules != []
      notify:
        - reload prometheus

    - name: configure prometheus
      template:
        src: "./templates/prometheus/{{ prometheus_config_file }}"
        dest: "{{ prometheus_config_dir }}/prometheus.yml"
        force: true
        owner: root
        group: prometheus
        mode: 0640
        validate: "{{ _prometheus_binary_install_dir }}/promtool check config %s"
      notify:
        - reload prometheus

    - name: configure Prometheus web
      copy:
        content: "{{ prometheus_web_config | to_nice_yaml(indent=2,sort_keys=False) }}"
        dest: "{{ prometheus_config_dir }}/web.yml"
        force: true
        owner: root
        group: prometheus
        mode: 0640

    - name: configure prometheus static targets
      copy:
        content: |
          #jinja2: lstrip_blocks: True
          {{ item.value | to_nice_yaml(indent=2,sort_keys=False) }}
        dest: "{{ prometheus_config_dir }}/file_sd/{{ item.key }}.yml"
        force: true
        owner: root
        group: prometheus
        mode: 0640
      with_dict: "{{ prometheus_targets }}"
      when: prometheus_targets != {}

  handlers:
    - name: restart prometheus
      become: true
      systemd:
        daemon_reload: true
        name: prometheus
        state: restarted

    - name: reload prometheus
      become: true
      systemd:
        name: prometheus
        state: reloaded
