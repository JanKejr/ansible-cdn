- name: Create a network with custom IPAM config and network driver
  community.docker.docker_network:
    name: "{{ cdn_docker_network_name }}"
  become: true
  become_method: su

- name: Build image with Debian OS
  community.docker.docker_image:
    build:
      path: "{{ cdn_docker_project }}"
    name: "{{ cdn_docker_settings.image }}"
    source: build

- name: Start nginx containers 
  community.docker.docker_container:
    name: "{{ item }}"
    image: "{{ cdn_docker_settings.image }}"
    cgroup_parent: docker.slice
    cgroupns_mode: private
    capabilities:
      - SYS_ADMIN
    interactive: true
    privileged: true
    published_ports:
      - "{{ hostvars[item].ansible_port }}:22"
      - "{{ hostvars[item].nginx_port }}:80"
    networks:
      - name: "{{ cdn_docker_network_name }}"
    publish_all_ports: true
    mounts:
      - type: tmpfs
        target: /tmp
      - type: tmpfs
        target: /run
      - type: tmpfs
        target: /run/lock
  loop: "{{ groups[cdn_webservers] }}"


- name: Start prometheus container 
  community.docker.docker_container:
    name: "{{ item }}"
    image: "{{ cdn_docker_settings.image }}"
    cgroup_parent: docker.slice
    cgroupns_mode: private
    capabilities:
      - SYS_ADMIN
    interactive: true
    privileged: true
    published_ports:
      - "{{ hostvars[item].ansible_port }}:22"
      - "{{ hostvars[item].prometheus_port }}:9090"
    networks:
      - name: "{{ cdn_docker_network_name }}"
    publish_all_ports: true
    mounts:
      - type: tmpfs
        target: /tmp
      - type: tmpfs
        target: /run
      - type: tmpfs
        target: /run/lock
  loop: "{{ groups[cdn_prometheus] }}"


- name: Start grafana container 
  community.docker.docker_container:
    name: "{{ item }}"
    image: "{{ cdn_docker_settings.image }}"
    cgroup_parent: docker.slice
    cgroupns_mode: private
    capabilities:
      - SYS_ADMIN
    interactive: true
    privileged: true
    published_ports:
      - "{{ hostvars[item].ansible_port }}:22"
      - "{{ hostvars[item].grafana_port }}:3000"
    networks:
      - name: "{{ cdn_docker_network_name }}"
    publish_all_ports: true
    mounts:
      - type: tmpfs
        target: /tmp
      - type: tmpfs
        target: /run
      - type: tmpfs
        target: /run/lock
  loop: "{{ groups[cdn_grafana] }}"
